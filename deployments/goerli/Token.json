{
  "address": "0xA9A2dED39807a908cDA71FE2E68d9d0abcE183e5",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "oldOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "ownerChanged",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "removeValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x263e244498d26e4e20c0286ba0b7ef75b87ce5c12d942e44bc315f37f091d547",
  "receipt": {
    "to": null,
    "from": "0x2c20b33DeC0ca2511CC676f17ADd8B5330A2EBd3",
    "contractAddress": "0xA9A2dED39807a908cDA71FE2E68d9d0abcE183e5",
    "transactionIndex": 66,
    "gasUsed": "1633128",
    "logsBloom": "0x
    "blockHash": "0x8d11f283d7d873e56801d94f884b8c343e74c6a653d16c9158faa7f903de56ed",
    "transactionHash": "0x263e244498d26e4e20c0286ba0b7ef75b87ce5c12d942e44bc315f37f091d547",
    "logs": [
      {
        "transactionIndex": 66,
        "blockNumber": 7883364,
        "transactionHash": "0x263e244498d26e4e20c0286ba0b7ef75b87ce5c12d942e44bc315f37f091d547",
        "address": "0xA9A2dED39807a908cDA71FE2E68d9d0abcE183e5",
        "topics": [
          "0x232fba693394e47cdbc6f4760e24687abfb144ddca4600a356321757a0a129fb",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000002c20b33dec0ca2511cc676f17add8b5330a2ebd3"
        ],
        "data": "0x",
        "logIndex": 166,
        "blockHash": "0x8d11f283d7d873e56801d94f884b8c343e74c6a653d16c9158faa7f903de56ed"
      }
    ],
    "blockNumber": 7883364,
    "cumulativeGasUsed": "8474190",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 2,
  "solcInputHash": "7097b15229a825c22f29268d370f7358",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ownerChanged\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"removeValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns allowance of token to spender\"},\"approve(address,uint256)\":{\"details\":\"Owner call this function allow spender to transfer their token\",\"params\":{\"_spender\":\"Address that can transfer owner's token\",\"_value\":\"Number of tokens\"}},\"balanceOf(address)\":{\"details\":\"Returns the tokens balance.\"},\"burn(address,uint256)\":{\"details\":\"Only owner of the token can burn thier token\",\"params\":{\"account\":\"Address that burn thier tokens\",\"amount\":\"Number of tokens to be burn\"}},\"decimals()\":{\"details\":\"Returns the tokens decimal\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Owner decrease allowance of spender to spend less tokens\",\"params\":{\"removeValue\":\"Number of tokens\",\"spender\":\"Address that can transfer owner's token\"}},\"getOwner()\":{\"details\":\"Return current owner of the contract\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Owner increase allowance of spender to spend more tokens\",\"params\":{\"addedValue\":\"Number of tokens\",\"spender\":\"Address that can transfer owner's token\"}},\"mint(address,uint256)\":{\"details\":\"Owner can mint unlimited tokens\",\"params\":{\"account\":\"Address to send minted tokens\",\"amount\":\"Number of tokens to be mint\"}},\"name()\":{\"details\":\"Returns the token name.\"},\"symbol()\":{\"details\":\"Returns the token symbol\"},\"totalSupply()\":{\"details\":\"Returns the tokens in totalSupply.\"},\"transfer(address,uint256)\":{\"details\":\"Owner transfer token from their address to receiver\",\"params\":{\"_to\":\"Address of receiver\",\"_value\":\"Number of tokens\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Spender transfer token which owner allowed them\",\"params\":{\"_from\":\"Address of spender\",\"_to\":\"Address of receiver\",\"_value\":\"Number of tokens\"}},\"transferOwnership(address)\":{\"details\":\"owner of the contract transfer onwership to new owner\",\"params\":{\"_newOwner\":\"Address of the new owner\"}}},\"version\":1},\"userdoc\":{\"events\":{\"Transfer(address,address,uint256)\":{\"notice\":\"Events\"}},\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"Constructor\"}},\"notice\":\"ERC20 Toekn implementation\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Token.sol\":\"Token\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Token.sol\":{\"content\":\"//SPDX-License-Identifier:MIT\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\nabstract contract ERC20Token {\\r\\n    /**Functions */\\r\\n    function name() public view virtual returns (string memory);\\r\\n\\r\\n    function symbol() public view virtual returns (string memory);\\r\\n\\r\\n    function decimals() public view virtual returns (uint256);\\r\\n\\r\\n    function totalSupply() public view virtual returns (uint256);\\r\\n\\r\\n    function balanceOf(address _owner) public view virtual returns (uint256 balance);\\r\\n\\r\\n    function transfer(address _to, uint256 _value) public virtual returns (bool success);\\r\\n\\r\\n    function transferFrom(\\r\\n        address _from,\\r\\n        address _to,\\r\\n        uint256 _value\\r\\n    ) public virtual returns (bool success);\\r\\n\\r\\n    function approve(address _spender, uint256 _value) public virtual returns (bool success);\\r\\n\\r\\n    function allowance(address _owner, address _spender)\\r\\n        public\\r\\n        view\\r\\n        virtual\\r\\n        returns (uint256 remaining);\\r\\n\\r\\n    /**Events*/\\r\\n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\\r\\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\\r\\n}\\r\\n\\r\\n/**This contract manage owner of the contract*/\\r\\ncontract owned {\\r\\n    // /**Events */\\r\\n    event ownerChanged(address indexed oldOwner, address indexed owner);\\r\\n    address private owner;\\r\\n\\r\\n    /**Constructor */\\r\\n    constructor() {\\r\\n        owner = msg.sender;\\r\\n        emit ownerChanged(address(0), owner);\\r\\n    }\\r\\n\\r\\n    modifier onlyOwner() {\\r\\n        require(owner == msg.sender, \\\"Only owner can call this function\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev owner of the contract transfer onwership to new owner\\r\\n     * @param _newOwner Address of the new owner\\r\\n     */\\r\\n    function transferOwnership(address _newOwner) public onlyOwner {\\r\\n        require(_newOwner != address(0));\\r\\n        owner = _newOwner;\\r\\n        emit ownerChanged(msg.sender, _newOwner);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Return current owner of the contract\\r\\n     */\\r\\n    function getOwner() public view returns (address) {\\r\\n        return owner;\\r\\n    }\\r\\n}\\r\\n\\r\\n/**ERC20 Toekn implementation*/\\r\\ncontract Token is owned, ERC20Token {\\r\\n    /** State Variables*/\\r\\n    string private _name;\\r\\n    string private _symbol;\\r\\n    uint256 private _decimal;\\r\\n    uint256 private _totalSupply;\\r\\n    address private _minter;\\r\\n    uint256 test;\\r\\n\\r\\n    /**Mappings*/\\r\\n    mapping(address => uint256) private _balance;\\r\\n    mapping(address => mapping(address => uint256)) private _allowances;\\r\\n\\r\\n    /** Constructor*/\\r\\n    constructor() {\\r\\n        _name = \\\"Flat\\\";\\r\\n        _symbol = \\\"FT\\\";\\r\\n        _decimal = 0;\\r\\n        _totalSupply = 1000000;\\r\\n        _minter = msg.sender;\\r\\n        _balance[_minter] = _totalSupply;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the token name.\\r\\n     */\\r\\n    function name() public view override returns (string memory) {\\r\\n        return _name;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the token symbol\\r\\n     */\\r\\n\\r\\n    function symbol() public view override returns (string memory) {\\r\\n        return _symbol;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the tokens decimal\\r\\n     */\\r\\n\\r\\n    function decimals() public view override returns (uint256) {\\r\\n        return _decimal;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the tokens in totalSupply.\\r\\n     */\\r\\n\\r\\n    function totalSupply() public view override returns (uint256) {\\r\\n        return _totalSupply;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the tokens balance.\\r\\n     */\\r\\n\\r\\n    function balanceOf(address _owner) public view override returns (uint256 balance) {\\r\\n        return _balance[_owner];\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns allowance of token to spender\\r\\n     */\\r\\n    function allowance(address owner, address spender) public view override returns (uint256) {\\r\\n        return _allowances[owner][spender];\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Transfer token from one address to other token\\r\\n     * @param _from Address of spender\\r\\n     * @param _to Address of receiver\\r\\n     * @param _value Number of tokens\\r\\n     */\\r\\n    function _transfer(\\r\\n        address _from,\\r\\n        address _to,\\r\\n        uint256 _value\\r\\n    ) internal returns (bool success) {\\r\\n        require(_from != address(0), \\\"Address not Found\\\");\\r\\n        require(_to != address(0), \\\"Address not Found\\\");\\r\\n        require(_balance[_from] >= _value, \\\"You don't have enough balance\\\");\\r\\n        _balance[_from] -= _value;\\r\\n        _balance[_to] += _value;\\r\\n        emit Transfer(_from, _to, _value);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Owner transfer token from their address to receiver\\r\\n     * @param _to Address of receiver\\r\\n     * @param _value Number of tokens\\r\\n     */\\r\\n    function transfer(address _to, uint256 _value) public override returns (bool success) {\\r\\n        address owner = msg.sender;\\r\\n        _transfer(owner, _to, _value);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Spender transfer token which owner allowed them\\r\\n     * @param _from Address of spender\\r\\n     * @param _to Address of receiver\\r\\n     * @param _value Number of tokens\\r\\n     */\\r\\n    function transferFrom(\\r\\n        address _from,\\r\\n        address _to,\\r\\n        uint256 _value\\r\\n    ) public override returns (bool success) {\\r\\n        address spender = msg.sender;\\r\\n        _spenderAllowance(_from, spender, _value);\\r\\n        _transfer(_from, _to, _value);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Owner call this function allow spender to transfer their token\\r\\n     * @param _spender Address that can transfer owner's token\\r\\n     * @param _value Number of tokens\\r\\n     */\\r\\n    function approve(address _spender, uint256 _value) public override returns (bool success) {\\r\\n        address owner = msg.sender;\\r\\n        _approve(owner, _spender, _value);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Owner of token can allow spender to transfer their token\\r\\n     * @param owner Owner of the token\\r\\n     * @param spender Address that can transfer owner's token\\r\\n     * @param _value Number of tokens\\r\\n     */\\r\\n    function _approve(\\r\\n        address owner,\\r\\n        address spender,\\r\\n        uint256 _value\\r\\n    ) internal {\\r\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\r\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\r\\n        _allowances[owner][spender] = _value;\\r\\n        emit Approval(owner, spender, _value);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev When spender transfer this tokens, this function remove allowance of transferred tokens\\r\\n     * @param from Owner of the token\\r\\n     * @param spender Address that can transfer owner's token\\r\\n     * @param _value Number of tokens\\r\\n     */\\r\\n    function _spenderAllowance(\\r\\n        address from,\\r\\n        address spender,\\r\\n        uint256 _value\\r\\n    ) internal {\\r\\n        uint256 currentAllowance = allowance(from, spender);\\r\\n        if (currentAllowance != type(uint256).max) {\\r\\n            require(currentAllowance >= _value, \\\"ERC20: insufficient allowance\\\");\\r\\n            unchecked {\\r\\n                _approve(from, spender, currentAllowance - _value);\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Owner increase allowance of spender to spend more tokens\\r\\n     * @param spender Address that can transfer owner's token\\r\\n     * @param addedValue Number of tokens\\r\\n     */\\r\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\r\\n        address owner = msg.sender;\\r\\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Owner decrease allowance of spender to spend less tokens\\r\\n     * @param spender Address that can transfer owner's token\\r\\n     * @param removeValue Number of tokens\\r\\n     */\\r\\n    function decreaseAllowance(address spender, uint256 removeValue) public virtual returns (bool) {\\r\\n        address owner = msg.sender;\\r\\n        require(allowance(owner, spender) >= removeValue, \\\"ERC20: decreased allowance below zero\\\");\\r\\n        _approve(owner, spender, allowance(owner, spender) - removeValue);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Owner can mint unlimited tokens\\r\\n     * @param account Address to send minted tokens\\r\\n     * @param amount Number of tokens to be mint\\r\\n     */\\r\\n    function mint(address account, uint256 amount) public onlyOwner {\\r\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\r\\n        _totalSupply += amount;\\r\\n        _balance[account] += amount;\\r\\n        emit Transfer(address(0), account, amount);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Only owner of the token can burn thier token\\r\\n     * @param account Address that burn thier tokens\\r\\n     * @param amount Number of tokens to be burn\\r\\n     */\\r\\n    function burn(address account, uint256 amount) public {\\r\\n        require(msg.sender == account, \\\"Only owner of the token can burn thier token\\\");\\r\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\r\\n        uint256 accountBalance = _balance[account];\\r\\n        require(accountBalance >= amount, \\\"ERC20: burn amount exceeds balance\\\");\\r\\n\\r\\n        _totalSupply -= amount;\\r\\n        _balance[account] -= amount;\\r\\n        emit Transfer(account, address(0), amount);\\r\\n    }\\r\\n}\\r\\n\\r\\n//Contract Address: 0x812F447911dAf485de8296e2Bb3D1Dc95C84e462\\r\\n\",\"keccak256\":\"0x32acd778ea107b5aa070d7b66e321c02c12edd5a1bdfb00456879ab12f41d89c\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100f55760003560e01c806370a0823111610097578063a457c2d711610066578063a457c2d714610288578063a9059cbb146102b8578063dd62ed3e146102e8578063f2fde38b14610318576100f5565b806370a0823114610200578063893d20e81461023057806395d89b411461024e5780639dc29fac1461026c576100f5565b806323b872dd116100d357806323b872dd14610166578063313ce5671461019657806339509351146101b457806340c10f19146101e4576100f5565b806306fdde03146100fa578063095ea7b31461011857806318160ddd14610148575b600080fd5b610102610334565b60405161010f919061114d565b60405180910390f35b610132600480360381019061012d9190611208565b6103c6565b60405161013f9190611263565b60405180910390f35b6101506103e2565b60405161015d919061128d565b60405180910390f35b610180600480360381019061017b91906112a8565b6103ec565b60405161018d9190611263565b60405180910390f35b61019e610415565b6040516101ab919061128d565b60405180910390f35b6101ce60048036038101906101c99190611208565b61041f565b6040516101db9190611263565b60405180910390f35b6101fe60048036038101906101f99190611208565b61044f565b005b61021a600480360381019061021591906112fb565b610625565b604051610227919061128d565b60405180910390f35b61023861066e565b6040516102459190611337565b60405180910390f35b610256610697565b604051610263919061114d565b60405180910390f35b61028660048036038101906102819190611208565b610729565b005b6102a2600480360381019061029d9190611208565b610967565b6040516102af9190611263565b60405180910390f35b6102d260048036038101906102cd9190611208565b6109e3565b6040516102df9190611263565b60405180910390f35b61030260048036038101906102fd9190611352565b610a00565b60405161030f919061128d565b60405180910390f35b610332600480360381019061032d91906112fb565b610a87565b005b606060018054610343906113c1565b80601f016020809104026020016040519081016040528092919081815260200182805461036f906113c1565b80156103bc5780601f10610391576101008083540402835291602001916103bc565b820191906000526020600020905b81548152906001019060200180831161039f57829003601f168201915b5050505050905090565b6000803390506103d7818585610beb565b600191505092915050565b6000600454905090565b6000803390506103fd858285610db4565b610408858585610e40565b5060019150509392505050565b6000600354905090565b6000803390506104448185856104358589610a00565b61043f9190611421565b610beb565b600191505092915050565b3373ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146104dd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d4906114c7565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361054c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161054390611533565b60405180910390fd5b806004600082825461055e9190611421565b9250508190555080600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546105b49190611421565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610619919061128d565b60405180910390a35050565b6000600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600280546106a6906113c1565b80601f01602080910402602001604051908101604052809291908181526020018280546106d2906113c1565b801561071f5780601f106106f45761010080835404028352916020019161071f565b820191906000526020600020905b81548152906001019060200180831161070257829003601f168201915b5050505050905090565b8173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610797576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161078e906115c5565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610806576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107fd90611533565b60405180910390fd5b6000600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101561088d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161088490611657565b60405180910390fd5b816004600082825461089f9190611677565b9250508190555081600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546108f59190611677565b92505081905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161095a919061128d565b60405180910390a3505050565b600080339050826109788286610a00565b10156109b9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109b09061171d565b60405180910390fd5b6109d88185856109c98589610a00565b6109d39190611677565b610beb565b600191505092915050565b6000803390506109f4818585610e40565b50600191505092915050565b6000600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b3373ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610b15576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b0c906114c7565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610b4e57600080fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f232fba693394e47cdbc6f4760e24687abfb144ddca4600a356321757a0a129fb60405160405180910390a350565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610c5a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c51906117af565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610cc9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cc090611841565b60405180910390fd5b80600860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051610da7919061128d565b60405180910390a3505050565b6000610dc08484610a00565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610e3a5781811015610e2c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e23906118ad565b60405180910390fd5b610e398484848403610beb565b5b50505050565b60008073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610eb0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ea790611919565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610f1f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f1690611919565b60405180910390fd5b81600760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610fa1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f9890611985565b60405180910390fd5b81600760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610ff09190611677565b9250508190555081600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546110469190611421565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516110aa919061128d565b60405180910390a3600190509392505050565b600081519050919050565b600082825260208201905092915050565b60005b838110156110f75780820151818401526020810190506110dc565b60008484015250505050565b6000601f19601f8301169050919050565b600061111f826110bd565b61112981856110c8565b93506111398185602086016110d9565b61114281611103565b840191505092915050565b600060208201905081810360008301526111678184611114565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061119f82611174565b9050919050565b6111af81611194565b81146111ba57600080fd5b50565b6000813590506111cc816111a6565b92915050565b6000819050919050565b6111e5816111d2565b81146111f057600080fd5b50565b600081359050611202816111dc565b92915050565b6000806040838503121561121f5761121e61116f565b5b600061122d858286016111bd565b925050602061123e858286016111f3565b9150509250929050565b60008115159050919050565b61125d81611248565b82525050565b60006020820190506112786000830184611254565b92915050565b611287816111d2565b82525050565b60006020820190506112a2600083018461127e565b92915050565b6000806000606084860312156112c1576112c061116f565b5b60006112cf868287016111bd565b93505060206112e0868287016111bd565b92505060406112f1868287016111f3565b9150509250925092565b6000602082840312156113115761131061116f565b5b600061131f848285016111bd565b91505092915050565b61133181611194565b82525050565b600060208201905061134c6000830184611328565b92915050565b600080604083850312156113695761136861116f565b5b6000611377858286016111bd565b9250506020611388858286016111bd565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806113d957607f821691505b6020821081036113ec576113eb611392565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061142c826111d2565b9150611437836111d2565b925082820190508082111561144f5761144e6113f2565b5b92915050565b7f4f6e6c79206f776e65722063616e2063616c6c20746869732066756e6374696f60008201527f6e00000000000000000000000000000000000000000000000000000000000000602082015250565b60006114b16021836110c8565b91506114bc82611455565b604082019050919050565b600060208201905081810360008301526114e0816114a4565b9050919050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b600061151d601f836110c8565b9150611528826114e7565b602082019050919050565b6000602082019050818103600083015261154c81611510565b9050919050565b7f4f6e6c79206f776e6572206f662074686520746f6b656e2063616e206275726e60008201527f20746869657220746f6b656e0000000000000000000000000000000000000000602082015250565b60006115af602c836110c8565b91506115ba82611553565b604082019050919050565b600060208201905081810360008301526115de816115a2565b9050919050565b7f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60008201527f6365000000000000000000000000000000000000000000000000000000000000602082015250565b60006116416022836110c8565b915061164c826115e5565b604082019050919050565b6000602082019050818103600083015261167081611634565b9050919050565b6000611682826111d2565b915061168d836111d2565b92508282039050818111156116a5576116a46113f2565b5b92915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b60006117076025836110c8565b9150611712826116ab565b604082019050919050565b60006020820190508181036000830152611736816116fa565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b60006117996024836110c8565b91506117a48261173d565b604082019050919050565b600060208201905081810360008301526117c88161178c565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b600061182b6022836110c8565b9150611836826117cf565b604082019050919050565b6000602082019050818103600083015261185a8161181e565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b6000611897601d836110c8565b91506118a282611861565b602082019050919050565b600060208201905081810360008301526118c68161188a565b9050919050565b7f41646472657373206e6f7420466f756e64000000000000000000000000000000600082015250565b60006119036011836110c8565b915061190e826118cd565b602082019050919050565b60006020820190508181036000830152611932816118f6565b9050919050565b7f596f7520646f6e2774206861766520656e6f7567682062616c616e6365000000600082015250565b600061196f601d836110c8565b915061197a82611939565b602082019050919050565b6000602082019050818103600083015261199e81611962565b905091905056fea2646970667358221220bb0bb23133f3163e7812eaa09552a346164536c414123c3ffb92c54b6bd8645164736f6c63430008110033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "Returns allowance of token to spender"
      },
      "approve(address,uint256)": {
        "details": "Owner call this function allow spender to transfer their token",
        "params": {
          "_spender": "Address that can transfer owner's token",
          "_value": "Number of tokens"
        }
      },
      "balanceOf(address)": {
        "details": "Returns the tokens balance."
      },
      "burn(address,uint256)": {
        "details": "Only owner of the token can burn thier token",
        "params": {
          "account": "Address that burn thier tokens",
          "amount": "Number of tokens to be burn"
        }
      },
      "decimals()": {
        "details": "Returns the tokens decimal"
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Owner decrease allowance of spender to spend less tokens",
        "params": {
          "removeValue": "Number of tokens",
          "spender": "Address that can transfer owner's token"
        }
      },
      "getOwner()": {
        "details": "Return current owner of the contract"
      },
      "increaseAllowance(address,uint256)": {
        "details": "Owner increase allowance of spender to spend more tokens",
        "params": {
          "addedValue": "Number of tokens",
          "spender": "Address that can transfer owner's token"
        }
      },
      "mint(address,uint256)": {
        "details": "Owner can mint unlimited tokens",
        "params": {
          "account": "Address to send minted tokens",
          "amount": "Number of tokens to be mint"
        }
      },
      "name()": {
        "details": "Returns the token name."
      },
      "symbol()": {
        "details": "Returns the token symbol"
      },
      "totalSupply()": {
        "details": "Returns the tokens in totalSupply."
      },
      "transfer(address,uint256)": {
        "details": "Owner transfer token from their address to receiver",
        "params": {
          "_to": "Address of receiver",
          "_value": "Number of tokens"
        }
      },
      "transferFrom(address,address,uint256)": {
        "details": "Spender transfer token which owner allowed them",
        "params": {
          "_from": "Address of spender",
          "_to": "Address of receiver",
          "_value": "Number of tokens"
        }
      },
      "transferOwnership(address)": {
        "details": "owner of the contract transfer onwership to new owner",
        "params": {
          "_newOwner": "Address of the new owner"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "events": {
      "Transfer(address,address,uint256)": {
        "notice": "Events"
      }
    },
    "kind": "user",
    "methods": {
      "constructor": {
        "notice": "Constructor"
      }
    },
    "notice": "ERC20 Toekn implementation",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 94,
        "contract": "contracts/Token.sol:Token",
        "label": "owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 170,
        "contract": "contracts/Token.sol:Token",
        "label": "_name",
        "offset": 0,
        "slot": "1",
        "type": "t_string_storage"
      },
      {
        "astId": 172,
        "contract": "contracts/Token.sol:Token",
        "label": "_symbol",
        "offset": 0,
        "slot": "2",
        "type": "t_string_storage"
      },
      {
        "astId": 174,
        "contract": "contracts/Token.sol:Token",
        "label": "_decimal",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 176,
        "contract": "contracts/Token.sol:Token",
        "label": "_totalSupply",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      },
      {
        "astId": 178,
        "contract": "contracts/Token.sol:Token",
        "label": "_minter",
        "offset": 0,
        "slot": "5",
        "type": "t_address"
      },
      {
        "astId": 180,
        "contract": "contracts/Token.sol:Token",
        "label": "test",
        "offset": 0,
        "slot": "6",
        "type": "t_uint256"
      },
      {
        "astId": 185,
        "contract": "contracts/Token.sol:Token",
        "label": "_balance",
        "offset": 0,
        "slot": "7",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 191,
        "contract": "contracts/Token.sol:Token",
        "label": "_allowances",
        "offset": 0,
        "slot": "8",
        "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_uint256)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}